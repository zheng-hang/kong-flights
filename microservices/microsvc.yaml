version: '3.8'

services:

  # amqp_setup:
  #   image: python:3.9-slim
  #   volumes:
  #     - .:/app
  #   environment:
  #     - HOSTNAME=localhost
  #     - PORT=5672
  #     - EXCHANGENAME=seat_topic
  #     - EXCHANGETYPE=topic
  #     - seatUpdate_queue_name = 'Booking_SeatUpdate'
  #     - bCreation_queue_name = 'Booking_Creation'
  #   command: python amqp_setup.py
  #   depends_on:
  #     - rabbitmq

  # amqp_connection:
  #   image: python:3.9-slim
  #   volumes:
  #     - .:/app
  #   environment:
  #     - HOSTNAME=localhost
  #     - PORT=5672
  #   command: python amqp_connection.py
  #   depends_on:
  #     - rabbitmq

# RabbitMQ: Msging broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-mgmt
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my-network


# Seat Selection: Update Availablitiy, Insert Seat, Get seat
  bookings:
    build:
      context: ./
      dockerfile: bookings.Dockerfile
    image: <dockerid>/bookings:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      avail_queue_name: SeatAvailUpdate
      new_queue_name: NewSeatUpdate
      dbURL: mysql+mysqlconnector://root:root@mysql-booking:3312/mysql-booking
      PYTHONUNBUFFERED: 1
    networks:
      - my-network





networks:
  default:
    name: my_network